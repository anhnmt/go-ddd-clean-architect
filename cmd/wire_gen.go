// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"app/application/controllers"
	"app/core/bizs"
	"app/core/configs"
	opensearch2 "app/infrastructure/opensearch"
	mysql2 "app/infrastructure/repositories/mysql"
	"app/pkg/logger"
	"app/pkg/mysql"
	"app/pkg/opensearch"
)

// Injectors from wire.go:

func NewApp(cfg *config.Config, logger2 *logger.ApiLogger) (controllers.AppServer, error) {
	serverConfig, err := controllers.NewConfig(cfg)
	if err != nil {
		return nil, err
	}
	openSearchConfig, err := opensearch.NewConfig(cfg)
	if err != nil {
		return nil, err
	}
	openSearch, err := opensearch.New(openSearchConfig)
	if err != nil {
		return nil, err
	}
	jobCache, err := opensearch2.New(openSearch, logger2)
	if err != nil {
		return nil, err
	}
	mysqlConfig, err := mysql.NewConfig(cfg)
	if err != nil {
		return nil, err
	}
	db, err := mysql.NewMysqlDB(mysqlConfig)
	if err != nil {
		return nil, err
	}
	jobRepo := mysql2.New(db, logger2)
	jobBiz := bizs.NewJob(jobCache, jobRepo, logger2)
	appServer := controllers.New(logger2, serverConfig, jobBiz)
	return appServer, nil
}
